http://www.maketemplate.com/menu/

Method 1:
Server_Name and Request_URI
determine current file
and/or page name.

This method works by determining the page 'URI' and combining it with the server name to yield a variable with the URL. Read the following menu script then reference the explanation / summary:

<?php

$theuri = $_SERVER['REQUEST_URI'];

if ( ($theuri =="/") or ($theuri =="/index.php") )
{
$itemis = "<img src=\"images/arrow.gif\" alt=\"arrow \">
<span class=\"note\"> Screen Text Here </span>";

} else {

$itemis = "<a href=\"www.yourdomain.com/index.php\">Screen Text Here </a>";
}
echo $itemis;
?>
VIP: Repeat this 'if statement' for each page!

Explanation: The 'theuri' variable combines the server name and the URI to give the 'www.yourdomain.com/filename (such as index.php file name). Then the if statement checks to see if that is the current page - and if so - it adds an image (arrow in this case) - in front of the screen text. It also uses CSS (a 'span' tag) to change the text (grey out - or whatever :)

If the page is NOT the current page, the 'else' statement displays a regular anchor tag (of course this could be a button - or whatever :)
Method 2:
Predefine a User Function
Use Request_URI
to determine folder / directory name

This method works on sites that are organized so that the folders / directories contain separate pages. In other words, if the directory names are like the ones used on this site (e.g. basic - header - scrollbar - etc.) Then the URL will be www.yourdomain.com/directoryname/

With this organized setup, it's easier to define a 'user function' to check each page. This is more powerful but depends on the structure of the site i.e. works well on sites with keywords as the directory names. And when each directory contains a separate web page (such as this site and this page = www.maketemplate.com/menu/ )

<?php

function fixmenu ($name1) {

$name2 = ucfirst($name1);

$item= "<a href=\"/$name1/\">$name2 </a>";

$theur = $_SERVER['REQUEST_URI'];

if ( ($theur =="/$name1/") or ($theur =="/$name1/index.php") )
{
$item= "<img src=\"/images/arrow.gif\" alt=\"arrow \">$name2";
}
return $item;
}

echo fixmenu(directoryname1) . "<br/>Screen Text If Required";

echo fixmenu(directoryname2) . "<br/>Different Screen Text If Required";

echo fixmenu(directoryname3) . "<br/>More Screen Text If Required";

?>

Explanation: This script uses ONE function (over and over).

In the case where all directory names are lower case, a second variable (name2) sets the first character to upper case. Then sets the 'item' variable to a regular link with $name1 andh $name2 as the screen text. (Of course this could be a button or more complicated link code)

Next the URI is read to determine the directory and/or the file in the directory - which is then tested in the 'If Statement'. If the directory name matches - then an image (arrow in this case) is place in front of the screen text. (again this could be expanded to include code to grey out the text or whatever :)

The 'final' variable ($item) is returned to the echo statement that called the function in the first place.

In other words, the 3 example 'echo' lines use the fixmenu function to return 3 differnt items on the included menu. So by adding more 'fixmenu' lines - with different directorynames - you generate the menu items.

P.S. Be Creative - make fancy Dynamic php include menus that show 'What is Happening' :) :) And be sure the code validates :)